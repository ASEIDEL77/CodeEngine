#!/bin/bash

set -e -o pipefail
[[ "$1" == "clean" ]] && CLEAN="true"

while read -u 3 line ; do
  line="$prev$line"
  if [[ "$line" == *"\\" ]]; then
    prev="${line: -2}"
    continue
  fi
  prev=""

  [[ "$line" != "\$"* && "$line" != "<!-- "* ]] && continue

  if [[ "$line" == "<!-- "* ]]; then
    line=${line:5}
    line=${line%% -->}

    [[ "$line" == "clean" ]] && FOUND_CLEAN="true" && set +e && continue

    if [[ "$CLEAN" == "" || "$FOUND_CLEAN" != "" ]]; then
      env | sort > origenv
      eval $line || { echo "Failed: $line" ; exit 1 ; }
      set +e ; env | sort | diff origenv - | grep -v '^[0-9]\+a' ; set -e
      echo
    fi
  else
    if [[ "$CLEAN" == "" || "$FOUND_CLEAN" != "" ]]; then
      line=${line:2}
      echo -n '$' $line" "
      test -n "$PAUSE" && { read -sn 1 a; [[ "$a" == "r" ]] && PAUSE=""; }; echo
      eval $line 2>&1 | ( ( [[ "$line" == "export"* ]] && cat ) || tee out )
      echo
      [[ "$line" == "exit"* ]] && exit 0
    fi
  fi
done  3< README.md
rm -f out origenv dog
